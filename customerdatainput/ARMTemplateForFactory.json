{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "customerdatainput"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"Data_Processing_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'Data_Processing'"
		},
		"Landing_Zone_ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Landing_Zone_ADLS'"
		},
		"for_trial_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'for_trial'"
		},
		"AzureSqlDatabase1_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "supermarketcustomerdatabase"
		},
		"Azure_Secrets_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://amazonkey.vault.azure.net/"
		},
		"Data_Processing_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0124-173346-7k1gqjb5"
		},
		"Final_Data_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "finaldata"
		},
		"Landing_Zone_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://supermarketdataingest.dfs.core.windows.net/"
		},
		"Order_Items_pull_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().baseURL}"
		},
		"for_trial_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://featureengineering01.dfs.core.windows.net/"
		},
		"s3_bucket_properties_typeProperties_accessKeyId": {
			"type": "object",
			"defaultValue": {
				"type": "AzureKeyVaultSecret",
				"store": {
					"referenceName": "Azure_Secrets",
					"type": "LinkedServiceReference"
				},
				"secretName": "amazonaccesskey"
			}
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Data_Ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_for_Data_Ingestion",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "lookup_value",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ingestion_files_HTTP",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_for_Data_Ingestion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_for_Data_Ingestion').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Ingest_HTTP_ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "input_data_HTTP",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "@item().rel_url",
													"type": "Expression"
												},
												"baseURL": {
													"value": "@item().base_url",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "data_ingest",
											"type": "DatasetReference",
											"parameters": {
												"directoryName": {
													"value": "@item().ADLS_directoryname",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().ADLS_filename",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup_customer_Product",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ingestion_files_HTTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "lookup_customer_and_product_list",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_customer_Product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_customer_Product').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Product_list_Ingestion",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AmazonS3ReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "product_input",
											"type": "DatasetReference",
											"parameters": {
												"bucket_name": {
													"value": "@item().s3_directory",
													"type": "Expression"
												},
												"file_name": {
													"value": "@item().s3_filename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "data_ingest",
											"type": "DatasetReference",
											"parameters": {
												"directoryName": {
													"value": "@item().s3_directory",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().s3_filename",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Customer_List",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Product_list_Ingestion",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Dataset_Connection",
											"type": "DatasetReference",
											"parameters": {
												"tableName": {
													"value": "@item().input_table_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "customer_input",
											"type": "DatasetReference",
											"parameters": {
												"directory_Name": {
													"value": "@item().output_directory",
													"type": "Expression"
												},
												"file_Name": {
													"value": "@item().output_sql_to_file",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-31T19:11:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lookup_value')]",
				"[concat(variables('factoryId'), '/datasets/lookup_customer_and_product_list')]",
				"[concat(variables('factoryId'), '/datasets/input_data_HTTP')]",
				"[concat(variables('factoryId'), '/datasets/data_ingest')]",
				"[concat(variables('factoryId'), '/datasets/product_input')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Dataset_Connection')]",
				"[concat(variables('factoryId'), '/datasets/customer_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Processing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data_Ingestion",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Data_Ingestion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Data_Processing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Data_Ingestion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/sujoydas2412de@outlook.com/Customer Data Notebook"
						},
						"linkedServiceName": {
							"referenceName": "Data_Processing",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Data_Uploading_SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data_Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CustomerData": {},
									"saleorderData": {},
									"sinkfinal1": {},
									"sinkfinal2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-02-01T05:33:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Data_Ingestion')]",
				"[concat(variables('factoryId'), '/linkedServices/Data_Processing')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Landing_Zone_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"outputFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().outputFileName",
							"type": "Expression"
						},
						"fileSystem": "supermarketdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Birth_Year",
						"type": "String"
					},
					{
						"name": "Education",
						"type": "String"
					},
					{
						"name": "Marital_status",
						"type": "String"
					},
					{
						"name": "Income",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Landing_Zone_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Final_Data_Customer_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Final_Data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Birth_Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Education",
						"type": "varchar"
					},
					{
						"name": "Marital_status",
						"type": "varchar"
					},
					{
						"name": "Income",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "final_customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Final_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Dataset_Connection')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvtodelta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "for_trial",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "generated_dataset.csv",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Account_Key",
						"type": "String"
					},
					{
						"name": "Performance_Month",
						"type": "String"
					},
					{
						"name": "DPD",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/for_trial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customer_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Landing_Zone_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory_Name": {
						"type": "string"
					},
					"file_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_Name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory_Name",
							"type": "Expression"
						},
						"fileSystem": "supermarketdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Landing_Zone_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_ingest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Landing_Zone_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directoryName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directoryName",
							"type": "Expression"
						},
						"fileSystem": "supermarketdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Landing_Zone_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datainputset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"container": "hosting"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "index",
						"type": "String"
					},
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Customer ID",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Fulfilment",
						"type": "String"
					},
					{
						"name": "Sales Channel ",
						"type": "String"
					},
					{
						"name": "ship-service-level",
						"type": "String"
					},
					{
						"name": "Courier Status",
						"type": "String"
					},
					{
						"name": "Qty",
						"type": "String"
					},
					{
						"name": "currency",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "ship-city",
						"type": "String"
					},
					{
						"name": "ship-state",
						"type": "String"
					},
					{
						"name": "ship-postal-code",
						"type": "String"
					},
					{
						"name": "ship-country",
						"type": "String"
					},
					{
						"name": "promotion-ids",
						"type": "String"
					},
					{
						"name": "B2B",
						"type": "String"
					},
					{
						"name": "fulfilled-by",
						"type": "String"
					},
					{
						"name": "Payment",
						"type": "String"
					},
					{
						"name": "FK_Product ID2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/input_data_HTTP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Order_Items_pull",
					"type": "LinkedServiceReference",
					"parameters": {
						"baseURL": {
							"value": "@dataset().baseURL",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"relativeURL": {
						"type": "string"
					},
					"baseURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeURL",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Order_Items_pull')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_customer_and_product_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Landing_Zone_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "input_schema,input_table_name,outpu.txt",
						"folderPath": "lookup",
						"fileSystem": "supermarketdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "input_schema",
						"type": "String"
					},
					{
						"name": "input_table_name",
						"type": "String"
					},
					{
						"name": "output_directory",
						"type": "String"
					},
					{
						"name": "output_sql_to_file",
						"type": "String"
					},
					{
						"name": "s3_directory",
						"type": "String"
					},
					{
						"name": "s3_filename",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Landing_Zone_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_value')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Landing_Zone_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "directoryname,filename,tablename",
						"folderPath": "lookup",
						"fileSystem": "supermarketdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "directoryname",
						"type": "String"
					},
					{
						"name": "filename",
						"type": "String"
					},
					{
						"name": "tablename",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Landing_Zone_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputtodelta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Landing_Zone_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "outputdelta",
						"fileSystem": "supermarketdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Landing_Zone_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/product_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "s3_bucket",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"bucket_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": {
							"value": "@dataset().bucket_name",
							"type": "Expression"
						},
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/s3_bucket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Azure_Secrets",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureSqlDatabase1_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure_Secrets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_Secrets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('Azure_Secrets_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Processing')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-6164286879149736.16.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('Data_Processing_accessToken')]"
					},
					"existingClusterId": "[parameters('Data_Processing_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Final_Data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Azure_Secrets",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('Final_Data_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure_Secrets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Landing_Zone_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Landing_Zone_ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Landing_Zone_ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Order_Items_pull')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"baseURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Order_Items_pull_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/for_trial')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('for_trial_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('for_trial_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/s3_bucket')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "https://s3.amazonaws.com",
					"accessKeyId": "[parameters('s3_bucket_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Azure_Secrets",
							"type": "LinkedServiceReference"
						},
						"secretName": "amazonsecretaccesskey"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure_Secrets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "Landing_Zone_ADLS",
								"type": "LinkedServiceReference"
							},
							"name": "CustomerData"
						},
						{
							"linkedService": {
								"referenceName": "Landing_Zone_ADLS",
								"type": "LinkedServiceReference"
							},
							"name": "saleorderData"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "Final_Data",
								"type": "LinkedServiceReference"
							},
							"name": "sinkfinal1"
						},
						{
							"linkedService": {
								"referenceName": "Final_Data",
								"type": "LinkedServiceReference"
							},
							"name": "sinkfinal2"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delta',",
						"     fileSystem: 'supermarketdata',",
						"     folderPath: 'Final_Cleaned/Customer_Final') ~> CustomerData",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delta',",
						"     fileSystem: 'supermarketdata',",
						"     folderPath: 'Final_Cleaned/Sales_Order_Final') ~> saleorderData",
						"CustomerData sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'final_customer',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     truncate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkfinal1",
						"saleorderData sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'sales_order',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     truncate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkfinal2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Landing_Zone_ADLS')]",
				"[concat(variables('factoryId'), '/linkedServices/Final_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "csvtodelta",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "Landing_Zone_ADLS",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Account_Key as string,",
						"          Performance_Month as string,",
						"          DPD as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'supermarketdata',",
						"     folderPath: 'lookup',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csvtodelta')]",
				"[concat(variables('factoryId'), '/linkedServices/Landing_Zone_ADLS')]"
			]
		}
	]
}